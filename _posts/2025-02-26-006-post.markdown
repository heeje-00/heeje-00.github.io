---
layout: post
title: "컨볼루션 연산"
date: 2025-02-26 10:00:00 +0900
categories: jekyll
mathjax: true
---

## **컨볼루션 연산**

안녕하세요!

컨볼루션 연산(Convolution Operation)은 신호 처리에서 사용되는 핵심 연산 중 하나입니다.

이전에 이산 신호와 LTI 시스템, 단위 임펄스 함수에 대해 다룬 적이 있었죠.  
앞에서 공부했던 개념들을 이용해 이산 신호를 나타내보겠습니다.

---

## **이산 컨볼루션 유도**

$x[n]$은 함수이고 $x[k]$는 $k$에서의 $x[n]$의 값입니다.  
또한 $x[n]$은 단위 임펄스 함수를 이용해 다음과 같이 표현할 수 있습니다.

$$
x[n] = \sum_{k = -\infty}^{\infty} x[k]\delta [n - k]
$$

이렇게 단위 임펄스 함수를 이용해서 이산 신호를 표현할 수 있죠.

이를 컨볼루션 연산을 통해 간단히 표현할 수 있습니다.

$$
x[n] * \delta [n]
$$

즉, $x[n]$과 $h[n]$의 이산 컨볼루션 연산은 다음과 같이 정의됩니다.

$$
x[n] * h[n] = \sum_{k = -\infty}^{\infty} x[k]h[n - k]
$$

---

## **LTI 시스템과 이산 컨볼루션**

이제 이산 컨볼루션이 어떻게 정의되는지 알아보았습니다.  

여기에 **LTI 시스템**이라는 가정을 넣으면 어떻게 될까요?

먼저 시스템은 다음과 같이 표현됩니다.

$$
y[n] = T(x[n])
$$

### **선형성**

먼저 **선형성**을 만족한다면 시스템은 다음을 만족합니다.

$$
T\left(\sum_{k = -\infty}^{\infty} c_{k} x_{k}[n]\right) = \sum_{k = -\infty}^{\infty} c_{k} T(x_{k}[n]) = \sum_{k = -\infty}^{\infty} c_{k} y_{k}[n]
$$

### **시불변성**

또한, **시불변성**에 의해 다음이 성립합니다.

$$
T(x[n - k]) = y[n - k]
$$

이제 $x[n]$을 단위 임펄스 함수로 표현해 봅시다.

$$
x[n] = \sum_{k = -\infty}^{\infty} x[k]\delta [n - k]
$$

여기서 시스템 $T$를 적용하면 어떻게 될까요?

$x[k]$는 상수 값이라는 점에 주의해야 합니다.

$$
T(x[n]) = T\left(\sum_{k = -\infty}^{\infty} x[k]\delta [n - k]\right) = \sum_{k = -\infty}^{\infty} x[k] T(\delta [n - k])
$$

여기서 **임펄스 응답** $h[n]$을 정의하겠습니다.

$$
h[n] = T(\delta[n])
$$

결국, **시불변성** 또한 성립하기 때문에 다음과 같이 정리됩니다.

$$
T(x[n]) = \sum_{k = -\infty}^{\infty} x[k] h[n - k] = x[n] * h[n]
$$

따라서 **시스템이 LTI 시스템이라면, 임펄스 응답과 컨볼루션 연산을 이용해 표현할 수 있습니다.**
